#!/bin/bash

# lbnecheckout
#
# David Adams
# July 2014
#
# Check out the development packages.

# LBNE setup.
source $LBNE_INSDIR/lbneinit.sh

PKGFILE=$LBNE_DEVDIR/packages.txt
if ! test -r $PKGFILE; then
  echo Package file not found: $PKGFILE
  exit 1
fi

# Create working area if needed.
HAVE_WORKDIR=`ls -d $LBNE_DEVDIR/workdir 2>/dev/null`
echo $LBNE_LINE
if [ -z "$HAVE_WORKDIR" ]; then
  echo Creating new workdir
  mkdir $LBNE_DEVDIR/workdir
else
  echo Using existing workdir
fi

cd $LBNE_DEVDIR/workdir

echo $LBNE_LINE
echo Setting up $LBNE_PROJECT
setup $LBNE_PROJECT $LBNE_PROJECTVERSION -q $LBNE_QUAL

if [ -z "$HAVE_WORKDIR" ]; then
  echo $LBNE_LINE
  echo Creating mrb area
  mrb newDev 
  echo MRB_BUILDIR = $MRB_BUILDDIR
fi

pwd
source localProducts_$LBNE_PRODUCT/setup

cd srcs
# Loop over local packages and check out if not already present.
echo $LBNE_LINE
echo Checking out packages
PKGTAGS=`cat $PKGFILE | sed 's/#.*//g'`
for PKGTAG in $PKGTAGS; do
  echo $LBNE_LINE
  # PKGTAG = PKG or PKG%TAG
  PKG=`echo $PKGTAG | awk -F% '{print $1}'`
  TAG=`echo $PKGTAG | awk -F% '{print $2}'`
  echo Checking out $PKG $TAG
  EXTRA=`echo $PKGTAG | awk -F% '{print $3}'`
  if [ -n "$EXTRA" ]; then
    echo Unexpected package%tag: $PKGTAG
    exit 1
  fi
  PKGPREFIX=`echo $PKG | awk -F/ '{print $1}'`
  PKGBASE=`basename $PKG`
  if test -r $PKGBASE; then
    echo Package $PKG is already checked out
  else
    echo Checking out $PKG
    if [ $PKG = LArViewer ]; then
      git clone https://github.com/czczc/LArViewer.git
      cp -r LArViewer/LBNE35t/DataConverter lbnecode/lbne
    else
      TAGSUF=
      if [ -n "$TAG" ]; then
        TAGSUF="-t $TAG"
      fi
      COM="mrb gitCheckout $TAGSUF $PKG"
      #if ! mrb gitCheckout $TAGSUF $PKG; then
      if ! $COM; then
        echo Checkout failed for $TAGSUF $PKG
        if echo $PKG | grep ^ssh: >/dev/null 2>&1; then 
          echo Test ssh access with
          echo "   ssh -T git@github.com"
          echo If that fails, add your key to the ssh agent:
          echo "  ssh-add ~/.ssh/github_rsa"
          echo "If that fails, start ssh agent with:"
          echo "  eval \"$(ssh-agent -s)\""
        fi
        exit 1
      else
        echo $COM >> $LBNE_HISTORY
      fi
      STAT=$?
      echo Create local feature branch
      echo $LBNE_LINE
      cd $PKGBASE
      #tmp git flow feature start $GIT_BRANCH_NAME
      cd ..
    fi
  fi
done
echo $LBNE_LINE

# Fix the versions in local products to correspond to check outs.
# See https://cdcvs.fnal.gov/redmine/projects/lbnecode/wiki/_Tutorial_#When-a-new-LArSoft-release-is-available-and-you-want-to-develop-against-the-new-LArSoft-release.
if [ -n "$MRB_TOP" ]; then
  cd $MRB_TOP
  DIR=localProducts_$LBNE_PRODUCT
  if [ -r $DIR ]; then
    if [ -n "$LBNE_VERBOSE" ]; then echo Removing $DIR; fi
    rm -rf $DIR
  fi
  if [ -n "$LBNE_VERBOSE" ]; then echo Running mrb newDev; fi
  mrb newDev -p
else
  echo MRB_TOP is not defined
  exit 1
fi

echo $LBNE_LINE
exit 5

echo $LBNE_LINE
echo Set up to run
if [ -n "$LBNE_VERBOSE" ]; then echo Running mrbslp; fi
mrbslp
cd $THISDIR

echo
echo Generate an event: lar -n 10 -c prodsingle_lbne35t.fcl
echo Event display: lar -c evd_lbne35t.fcl single35t_gen.root
echo $LBNE_LINE
